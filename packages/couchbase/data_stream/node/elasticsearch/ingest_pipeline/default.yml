---
description: Pipeline for parsing Couchbase Node metrics
processors:
  - set:
      field: ecs.version
      value: 8.3.0
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.type
      value: [info]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.kind
      value: metric
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.category
      value: [database]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.ingested
      value: "{{{_ingest.timestamp}}}"
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.module
      value: couchbase
      override: true
      ignore_failure: true
      ignore_empty_value: true  
  - rename:
      field: couchbase.node.cmd_get
      target_field: couchbase.node.commands.get.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: couchbase.node.get_hits
      target_field: couchbase.node.get.hits
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: couchbase.node.mcd_memory
      target_field: couchbase.node.memcached
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: couchbase.node.ops
      target_field: couchbase.node.operations.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: couchbase.node.vb_replica_curr_items
      target_field: couchbase.node.vb_replica.items.current
      ignore_missing: true
      ignore_failure: true
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
